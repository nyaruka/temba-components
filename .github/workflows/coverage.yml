name: 'Update Coverage Reports'

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Set Timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: 'UTC'

      - name: Checkout (GitHub)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - run: docker network create --driver bridge textit_default

      - name: Build and run tests with coverage
        uses: devcontainers/ci@v0.3
        with:
          runCmd: yarn validate && ./generate-coverage-badge.sh
          push: never
          env: |
            CI=true

      - name: Copy coverage to temp
        run: |
          mkdir -p /tmp/coverage-copy
          cp -r coverage /tmp/coverage-copy/

      - name: Deploy coverage to coverage branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Remove any coverage directory to avoid ambiguity with branch name
          rm -rf coverage

          # Create or checkout coverage branch
          if git show-ref --verify --quiet refs/remotes/origin/coverage; then
            git fetch origin coverage
            git checkout coverage
          else
            git checkout --orphan coverage
            git rm -rf . || true
          fi

          # Copy coverage report files from temp directly to root
          cp -r /tmp/coverage-copy/coverage/lcov-report/* ./
          rm -rf /tmp/coverage-copy

          # Create .nojekyll for GitHub Pages
          touch .nojekyll

          # Create .gitignore to exclude build byproducts from coverage branch
          echo "# Ignore build artifacts and local byproducts in coverage branch" > .gitignore
          echo "dist/" >> .gitignore
          echo "node_modules/" >> .gitignore
          echo "out-tsc/" >> .gitignore
          echo "screenshots/test/" >> .gitignore
          echo "static/svg/work/" >> .gitignore
          echo "# Add more patterns as needed" >> .gitignore

          # Add all files
          git add .

          # Commit if there are changes
          if ! git diff --staged --quiet; then
            git commit -m "Update coverage reports [skip ci] - $(date)"
            git push origin coverage
          fi
